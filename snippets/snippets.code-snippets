{
    "exportAction": {
        "prefix": "exaction",
        "body": [
            "export const ${1/(.*)/${1:/upcase}/} = \"${1/(.*)/${1:/upcase}/}\";",
        ],
        "description": "export action"
    },
    "createNewAction": {
        "prefix": "reaction",
        "body": [
            "export function ${1/([a-z]*)_+([a-z]*)/${1:/downcase}${2:/capitalize}/g}(${3/(,)[^,]*$//}) {",
            "\treturn {",
            "\t\t${3/[\\,]+[\\s]/,\n\t\t/}",
            "\t\ttype: ${1/(.*)/${1:/upcase}/},",
            "\t};",
            "};"
        ],
        "description": "creates new action"
    },
    "saga": {
        "prefix": "saga",
        "body": [
            "export function* ${1:func}() {",
            "\twhile (true) {",
            "\t\tconst { ${2:payload} } = yield take(${3:ACTION});",
            "\t\t$4",
            "\t}",
            "}"
        ],
        "description": "creates a new saga"
    },
    "sagaPut": {
        "prefix": "yp",
        "body": [
            "yield put({ ${1:payload}, type: ${2:ACTION} });"
        ],
        "description": "yield put"
    },
    "sagaCall": {
        "prefix": "yc",
        "body": [
            "yield call(() => ${1:func});"
        ],
        "description": "yield call"
    },
    "sagaConstCall": {
        "prefix": "cyc",
        "body": [
            "const ${2:res} = yield call(() => ${1:func});"
        ],
        "description": "const yield call"
    },
    "sagaSelect": {
        "prefix": "cys",
        "body": [
            "const ${2:selector} = yield select((state) => state.${1:property});"
        ],
        "description": "const yield select"
    },
    "sagaTake": {
        "prefix": "cyt",
        "body": [
            "const { ${2:payload} } = yield take(${3:ACTION});"
        ],
        "description": "const yield take"
    },
}